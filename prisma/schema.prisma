datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
  role  Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  password Password?
  notes    Note[]
  checks   Check[]
  todos    Todo[]
}

model Password {
  hash String

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
}

model Check {
  id      Int     @id @default(autoincrement())
  status  Status
  value   String?
  comment String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  todo   Todo @relation(fields: [todoId], references: [id])
  todoId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Todo {
  id Int @id @default(autoincrement())

  remark      String
  referenceId Int
  articleId   Int
  title       String
  definition  String?
  method      String?
  location    String?
  criteria    String?
  record      String?
  comments    String?
  periodId    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  checks Check[]

  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  article   Article     @relation(fields: [articleId], references: [id])
  reference Reference   @relation(fields: [referenceId], references: [id])
  period    Periodicity @relation(fields: [periodId], references: [id])
}

model Article {
  id   Int    @id @default(autoincrement())
  name String

  todos Todo[]
}

model Reference {
  id     Int     @id @default(autoincrement())
  name   String
  active Boolean @default(true)
  todos  Todo[]
}

model Periodicity {
  id    Int    @id @default(autoincrement())
  name  String
  todos Todo[]
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PASSED
  FAIL
  SUCCESS
  UNKNOWN
}
