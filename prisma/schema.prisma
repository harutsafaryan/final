datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
  role  Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  checks   Check[]
  todos    Todo[]
}

model Password {
  hash String

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
}

model Check {
  id     Int     @id @default(autoincrement())
  record String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  time1 DateTime @db.Time() @default(now())
  time2 DateTime @db.Timestamp() @default(now())
  time4 DateTime @db.Timetz() @default(now())
  
  date DateTime @db.Date @default(now())
  time DateTime @db.Timestamptz() @default(now())

  year    Int
  month   Int
  day     Int
  weekday Int

  todo   Todo @relation(fields: [todoId], references: [id])
  todoId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Todo {
  id Int @id @default(autoincrement())

  title      String
  definition String
  location   String
  criteria   String
  comments   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  checks Check[]

  userId Int
  user   User @relation(fields: [userId], references: [id])

  referenceId Int
  reference   Reference @relation(fields: [referenceId], references: [id])

  methodId Int
  method   Method @relation(fields: [methodId], references: [id])
}

model Reference {
  id     Int     @id @default(autoincrement())
  name   String
  active Boolean @default(true)

  todos Todo[]
}

model Method {
  id     Int     @id @default(autoincrement())
  name   String
  active Boolean @default(true)
  hours  Int?
  days   Int?
  week   Int?
  month  Int?

  todos Todo[]
}

enum Role {
  ADMIN
  USER
}
