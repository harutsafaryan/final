datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  checks   Check[]
  todos    Todo[]
}

model Password {
  hash String

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
}

model Check {
  id      Int     @id @default(autoincrement())
  comment String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  todo   Todo @relation(fields: [todoId], references: [id])
  todoId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Todo {
  id Int @id @default(autoincrement())

  reference  String   @unique
  title      String
  definition String
  method     Interval @default(DAILY)
  location   String
  criteria   String
  record     String
  comments   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  checks Check[]

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

enum Interval {
  DAILY
  WEEKLY
  MONTLY
}
